// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Organization {
  id            Int                     @id @default(autoincrement())
  name          String?                 @unique @db.VarChar(255)
  users         UsersOnOrganizations[]
  apiKeys       ApiKey[]
  pingSetups    PingSetup[]
}

model User {
  id                Int                     @id @default(autoincrement())
  firstName         String?                 @db.VarChar(255)
  lastName          String?                 @db.VarChar(255)
  email             String                  @unique @db.VarChar(255)
  passwordHash      String?                 @db.VarChar(255)
  organizations     UsersOnOrganizations[]
  authCode          String?                 @db.VarChar(255)
  authCodeExpiresAt DateTime?
  @@index([authCode])
}

model UsersOnOrganizations {
  organization      Organization    @relation(fields: [organizationId], references: [id])
  organizationId    Int
  user              User            @relation(fields: [userId], references: [id])
  userId            Int
  isAdmin           Boolean         @default(false)
  @@id([userId, organizationId])
}

model ApiKey {
  id                Int             @id @default(autoincrement())
  organization      Organization    @relation(fields: [organizationId], references: [id])
  organizationId    Int
  apiKey            String?         @unique @db.VarChar(255)
}

model PingSetup {
  id                    Int             @id @default(autoincrement())
  organization          Organization    @relation(fields: [organizationId], references: [id])
  organizationId        Int
  name                  String          @db.VarChar(255)
  groupName             String          @db.VarChar(255) @default("")
  emails                String[]
  notified              Boolean         @default(false)
  pings                 Ping[]
  lastPing              Ping?    @relation(name: "LastPing", fields: [lastPingId], references: [id])
  lastPingId            Int?
  lastSuccessfulPing    Ping?    @relation(name: "LastSuccessfulPing", fields: [lastSuccessfulPingId], references: [id])
  lastSuccessfulPingId  Int?
  @@unique([organizationId, name, groupName])
}

model Ping {
  id                    Int             @id @default(autoincrement())
  pingSetup             PingSetup       @relation(fields: [pingSetupId], references: [id])
  pingSetupId           Int
  tag                   String?         @db.VarChar(255)
  details               String?         @db.Text
  progressBar           Int?
  interval              Int
  time                  DateTime
  success               Boolean         @default(false)
  lastPingFor           PingSetup?      @relation(name:"LastPing")
  lastSuccessfulPingFor PingSetup?      @relation(name:"LastSuccessfulPing")
  @@index([pingSetupId, success])
}



// npx prisma migrate dev --name init